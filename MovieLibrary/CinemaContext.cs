// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace MovieLibrary
{
    public partial class CinemaContext : DbContext
    {
        public CinemaContext()
        {
        }

        public CinemaContext(DbContextOptions<CinemaContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Booking> Bookings { get; set; }
        public virtual DbSet<Contactu> Contactus { get; set; }
        public virtual DbSet<Feedback> Feedbacks { get; set; }
        public virtual DbSet<Movie> Movies { get; set; }
        public virtual DbSet<Usertable> Usertables { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=LAPTOP-90LB3DI5\\SQLEXPRESS;Initial Catalog=cinema;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Booking>(entity =>
            {
                entity.ToTable("Booking");

                entity.Property(e => e.MovieDate).HasColumnType("date");

                entity.Property(e => e.MovieName)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.SeatNo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.UserName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.HasOne(d => d.Movie)
                    .WithMany(p => p.Bookings)
                    .HasForeignKey(d => d.MovieId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__Booking__MovieId__38996AB5");
            });

            modelBuilder.Entity<Contactu>(entity =>
            {
                entity.HasKey(e => e.Email)
                    .HasName("PK__contactu__AB6E6165AC46C948");

                entity.ToTable("contactus");

                entity.Property(e => e.Email)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("email");

                entity.Property(e => e.Message)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("message");

                entity.Property(e => e.Phoneno)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("phoneno");

                entity.Property(e => e.Subjects)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("subjects");

                entity.Property(e => e.Username)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("username");
            });

            modelBuilder.Entity<Feedback>(entity =>
            {
                entity.ToTable("feedback");

                entity.Property(e => e.Feedbackid).HasColumnName("feedbackid");

                entity.Property(e => e.Mailid)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("mailid");

                entity.Property(e => e.Msg)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("msg");

                entity.Property(e => e.Username)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("username");
            });

            modelBuilder.Entity<Movie>(entity =>
            {
                entity.ToTable("Movie");

                entity.Property(e => e.MovieId).HasColumnName("MovieID");

                entity.Property(e => e.Casthero)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Castheroine)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Castothers1)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Castothers2)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Catagory)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Director)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Genre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("genre");

                entity.Property(e => e.MovieDate).HasColumnType("date");

                entity.Property(e => e.MovieDuration)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.MovieImage)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.MovieName)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Movielanguage)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Musician)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Producer)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.TheaterName)
                    .HasMaxLength(40)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Usertable>(entity =>
            {
                entity.HasKey(e => e.UserId)
                    .HasName("PK__Usertabl__1788CCACA7931C01");

                entity.ToTable("Usertable");

                entity.Property(e => e.UserId).HasColumnName("UserID");

                entity.Property(e => e.EmailId)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("EmailID");

                entity.Property(e => e.Gender).HasColumnName("gender");

                entity.Property(e => e.PhoneNumber)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.UserName)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Userpassword)
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}